services:
  
  redis:
    container_name: movie_watch_redis
    image: redis/redis-stack:latest
    ports:
      - "8390:6379"
      - "8381:8001"
    networks:
      - movieWatch
    volumes:
      - ./redis-data/:/data
    profiles:
      - dev
      - prod
    environment:
      REDIS_ARGS: "--save 60 1000 --appendonly yes"

  db:
    container_name: movie_watch_db
    image: "postgres:14.2"
    environment:
      POSTGRES_USER: movie_watch
      POSTGRES_PASSWORD: movie_watch
      POSTGRES_DB: movie_watch_db
    ports:
      - "8441:5432"
    networks:
      - movieWatch
    profiles:
      - dev
      - prod
      
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: movie_watch_backend
    networks:
      - movieWatch
    volumes:
      - ./MovieWatch.Backend/MovieWatch.Api/bin/Release/net8.0/linux-x64/publish:/App
      - ./MovieWatch.Backend/storage:/storage
      - ./MovieWatch.Backend/python:/python
    depends_on:
      - db
      - redis
    profiles:
      - prod
  
  nginx:
    container_name: movie_watch_nginx
    image: nginx:1.21.3
    restart: unless-stopped
    ports:
      - "8282:80"
    environment:
      - REACT_APP_API_BASE_URL=http://backend/REACT_APP_API_BASE_URL
      - NODE_ENV=production
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./frontend/dist:/usr/share/nginx/html
    networks:
      - movieWatch
    depends_on:
      - backend
    profiles:
      - prod

  pgadmin:
    container_name: movie_watch_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: "40"
      GUNICORN_ACCESS_LOGFILE: '/dev/null'
      GUNICORN_TIMEOUT: "30"
    ports:
      - "50002:80"
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    networks:
      - movieWatch
    profiles:
      - dev
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass


networks:
  movieWatch:

configs:
  pgpass:
    content: db:5432:*:movie_watch:movie_watch
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "Movie Watch Postgres",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "movie_watch",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}